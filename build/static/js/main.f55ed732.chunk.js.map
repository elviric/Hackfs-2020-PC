{"version":3,"sources":["assets/pc_logo.svg","assets/pc_logo.png","assets/pc_logo_+.png","components/Header.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","props","react_default","a","createElement","className","src","logo","amtRaised","href","target","concat","email","substring","Reg","onClick","logout","ipfs","IpfsAPI","host","port","protocol","magic","Magic","network","provider","ethers","providers","Web3Provider","rpcProvider","contractABI","contractAddress","linkContractABI","linkContractAddress","signer","getSigner","App","_useState","useState","_useState2","Object","slicedToArray","setEmail","_useState3","_useState4","publicAddress","setPublicAddress","_useState5","_useState6","balUser","setUserBal","_useState7","_useState8","_useState9","_useState10","_useState11","_useState12","isLoggedIn","setIsLoggedIn","_useState13","_useState14","_useState15","_useState16","_useState17","_useState18","setAmtRaised","_useState19","_useState20","_useState21","_useState22","encryptThisData","setEncryptedData","_useState23","_useState24","rawInput","setRawData","_useState25","_useState26","addCID","setCID","_useState27","_useState28","addReg","setReg","_useState29","_useState30","col","setCol","useEffect","user","then","_ref","asyncToGenerator","regenerator_default","mark","_callee","magicIsLoggedIn","_yield$magic$user$get","address","balance","wrap","_context","prev","next","getMetadata","sent","split","getAddress","t0","utils","getBalance","t1","formatEther","call","console","log","amtR","stop","_x","apply","this","arguments","login","_ref2","_callee2","_context2","auth","loginWithMagicLink","_ref3","_callee3","_context3","encrypt","_ref4","_callee4","daoPK","signedMessage","wrappedSignedData","eMsg","eMsgstr","_context4","signMessage","msg","EthCrypto","encryptWithPublicKey","JSON","stringify","cipher","_ref5","_callee5","contract","contractR","message","isReg","colors","_context5","Contract","balanceOf","badges","slice","addIPFS","_ref6","_callee6","_yield$ipfs$add","cid","_context6","add","conReg","_ref7","_callee7","tx","receipt","_context7","mintBadge","wait","map","value","index","divStyle","display","minWidth","minHeight","backgroundColor","key","style","class","type","name","required","placeholder","onChange","event","disabled","id","width","rootElement","document","getElementById","ReactDOM","render","react_router_dom"],"mappings":"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","file":"static/js/main.f55ed732.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pc_logo.8c4d9b9d.svg\";","module.exports = __webpack_public_path__ + \"static/media/pc_logo.a7cc79b6.png\";","module.exports = __webpack_public_path__ + \"static/media/pc_logo_+.f55a959e.png\";","import React from \"react\";\nimport logo from \"../assets/pc_logo.png\";\nexport default function Header(props) {\n\n    return (\n        \n            <div className=\"container header\">\n                <div className=\"left-side\">\n                   <img src={logo} />\n                </div>\n                <div>\n                \n                  <h1>FUND:<br></br>\n                  {props.amtRaised} Dai</h1>\n                \n                  <a\n                  href={`https://pay.testwyre.com/purchase?dest=ethereum%3A0x98B031783d0efb1E65C4072C6576BaCa0736A912&destCurrency=ETH&sourceAmount=10&paymentMethod=apple-pay&referenceId=your_own_id&accountId=YOUR_ACCOUNT`}\n                  target=\"_blank\"\n                  >\n                 <button>Donate</button></a>\n                </div>\n                <div className=\"right-side\">\n                <div>                    <h1 >              <a \n                href={`https://rinkeby.etherscan.io/address/${props.email}`}\n                target=\"_blank\"\n              >\n                {props.email.substring(0,8)}\n              </a><br></br>\n              <span>\n              {!props.Reg?(<b>Not reg</b>):(<b>Solider Lvl: 0</b>)}\n              </span></h1></div>\n\n                    <button onClick={props.logout}>Logout</button>\n                </div>\n\n            </div>\n        \n\n    );\n}\n\n","import React, { useState, useEffect } from \"react\";\nimport \"./styles.css\";\nimport logo from \"./assets/pc_logo.svg\";\nimport logo_p from \"./assets/pc_logo_+.png\";\nimport { Magic } from \"magic-sdk\";\nimport EthCrypto from 'eth-crypto';\nimport { ethers } from 'ethers';\nimport Header from './components/Header';\nimport IpfsAPI from 'ipfs-http-client';\n\nconst ipfs = IpfsAPI({host: 'ipfs.infura.io', port: '5001', protocol: 'https' })\n\n\n\n\n\n//console.log(ipfs);\n\nconst magic = new Magic('pk_test_4D84A95497B1CF87', { network: 'rinkeby' });\nconst provider = new ethers.providers.Web3Provider(magic.rpcProvider);\nconst contractABI = '[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseApproval\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"increaseApproval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"remaining\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"decimalPlaces\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"tokenName\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"tokenSymbol\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalTokensIssued\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]';\nconst contractAddress = \"0x0527e400502d0cb4f214dd0d2f2a323fc88ff924\";\nconst linkContractABI = '[{\"inputs\":[],\"name\":\"claimToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"requestId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"randomness\",\"type\":\"uint256\"}],\"name\":\"fulfillRandomness\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"userProvidedSeed\",\"type\":\"uint256\"}],\"name\":\"getRandomNumber\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"requestId\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"hash\",\"type\":\"string\"}],\"name\":\"mintBadge\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_keyHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_seed\",\"type\":\"uint256\"}],\"name\":\"requestRandomness\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"requestId\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_fToken\",\"type\":\"address\"}],\"name\":\"setFAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"badges\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"colors\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"faucetAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isReg\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"member\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"Hash\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"Plasma\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"randomResult\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"soliders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]';\nconst linkContractAddress = \"0x15b531245Fb5a3d2711e02eEFe3e069b23c06FE6\";\nconst signer = provider.getSigner();\n\n\n\nexport default function App() {\n  const [email, setEmail] = useState(\"\");\n  const [publicAddress, setPublicAddress] = useState(\"\");\n  const [balUser, setUserBal] = useState(\"\");\n  const [sendXTZAmount, setSendXTZAmount] = useState(0);\n  const [contractoperationGroupID, setContractoperationGroupID] = useState(\"\");\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userMetadata, setUserMetadata] = useState({});\n  const [transactionOperationGroupID, setTransactionOperationGroupID] = useState(\"\");\n  const [amtRaised, setAmtRaised] = useState(\"\");\n  const [isSolider, setIsSolider] = useState(false);\n  const [encryptThisData,setEncryptedData] = useState(\"\");\n  const [rawInput,setRawData] = useState(\"\");\n  const [addCID,setCID] = useState(\"\");\n  const [addReg,setReg] = useState(\"\");\n  const [col,setCol]=useState([]);\n  useEffect(() => {\n    magic.user.isLoggedIn().then(async magicIsLoggedIn => {\n      setIsLoggedIn(magicIsLoggedIn);\n      if (magicIsLoggedIn) {\n        const { email, publicAddress } = await magic.user.getMetadata();\n        setPublicAddress(publicAddress);\n        setEmail(email.split('@')[0]);\n        \n\n       //const signer = provider.getSigner();\n\n        // Get user's Ethereum public address\n        const address = await signer.getAddress();\n\n        // Get user's balance in ether\n        const balance = ethers.utils.formatEther(\n          await provider.getBalance(address) // Balance is in wei\n        );\n        setUserBal(balance);\n          console.log(\"eth_Addr:\"+address+\"\\n signer:\"+\"\\n Balance:\"+balance);\n          amtR();\n        \n          \n      }\n    });\n  }, [isLoggedIn]);\n\n  const login = async () => {\n    await magic.auth.loginWithMagicLink({ email });\n    setIsLoggedIn(true);\n  };\n\n  const logout = async () => {\n    await magic.user.logout();\n    setIsLoggedIn(false);\n  };\n  \n   \n  \n  \n  const encrypt = async () =>{\n    \n    const daoPK ='5eed5fa3a67696c334762bb4823e585e2ee579aba3558d9955296d6c04541b426078dbd48d74af1fd0c72aa1a05147cf17be6b60bdbed6ba19b08ec28445b0ca';\n\n    const signedMessage = await signer.signMessage(rawInput);\n    const wrappedSignedData = {msg:rawInput,signedMessage};\n\n    //console.log(encryptThisData);\n    const eMsg = await EthCrypto.encryptWithPublicKey(\n      daoPK\n    , JSON.stringify(wrappedSignedData)  );\n    const eMsgstr = EthCrypto.cipher.stringify(eMsg);\n    console.log(eMsgstr);\n   setEncryptedData(eMsgstr);\n  };\n \n  const amtR = async ()=>{\n    const contract = new ethers.Contract(contractAddress,contractABI,signer);\n    const contractR = new ethers.Contract(linkContractAddress,linkContractABI,signer);\n  \n    const message = await contract.balanceOf('0x15b531245Fb5a3d2711e02eEFe3e069b23c06FE6');\n    setAmtRaised(ethers.utils.formatEther(message));\n    const isReg = await contractR.isReg();\n    const colors = await contractR.badges();\n    \n    setCol(colors);\n    setReg(isReg);\n    console.log(colors[0].slice(-5),isReg);\n\n  };\n  \n  \n\n  const addIPFS = async()=>{\n    //console.log(encryptThisData);\n    const {cid} = await ipfs.add(encryptThisData);\n    console.log(cid);\n    setCID(cid);\n\n  }\n  const conReg = async()=>{\n    const contract = new ethers.Contract(linkContractAddress,linkContractABI,signer);\n    \n    // Send transaction to smart contract to update message\n    const tx = await contract.mintBadge(addCID);\n\n    // Wait for transaction to finish\n    const receipt = await tx.wait();\n\n    console.log(receipt);\n    amtR();\n  \n    \n  }\n  \n\n  return (\n    \n    <div className=\"App\">\n      \n      {!isLoggedIn ? (\n        <div>\n          <div className=\"container\">\n          <img width=\"50%\" src={logo}/>\n          </div>\n          \n          <div className=\"container gtc-2\">\n            <div>\n            <h1>Please sign up or login</h1>\n            </div>\n          <div>\n            <input\n              type=\"email\"\n              name=\"email\"\n              required=\"required\"\n              placeholder=\"Enter your email\"\n              onChange={event => {\n                setEmail(event.target.value);\n              }}\n            />\n            <button onClick={login}>Send</button>\n          </div>\n        \n          </div></div>\n      ) : (\n        <div>\n          <Header email={publicAddress} logout={logout} Reg={addReg} amtRaised={amtRaised}/>\n          <div className=\"container pad-top-4\">\n            \n\n            <div className=\"info lemon\">\n              <div>Bal: {balUser>0? balUser+\"ETH\":<a href=\"https://faucet.rinkeby.io/\" target=\"_blank\"><button>Get ETH</button></a>}</div>\n              <div>Req: <a href='#'>0</a></div>\n              <div>Rinkeby Network</div>\n              \n            </div>\n          \n            \n          </div>\n          <div className=\"container scanvas\">\n          <ul><h1> Soliders Canvas </h1>\n\n                \n                {\n                col.map((value, index) => {\n                  const divStyle = {\n                    \n                    display: 'inline-block',\n                    minWidth:20,\n                    minHeight:20,\n                    backgroundColor: '#' + value.slice(-6) ,\n                  };\n                  \n                  \n                  return <li key={index} style={divStyle} ></li>\n                })}\n            </ul>\n          </div>\n          { !addReg?\n\n          <div className=\"container\">\n            \n            <h1>Become a Plasma Solider!</h1>\n            \n             <input\n              type=\"text\"\n              name=\"destination\"\n              className=\"full-width\"\n              required=\"required\"\n              placeholder=\"Enter ASL, Blood type and contact info\"\n\n              onChange={event => {\n                setRawData(event.target.value);\n              }}\n            />\n            {\n              encryptThisData ?\n                  <div>\n                    \n                    <input\n              disabled\n              type=\"text\"\n              name=\"amount\"\n              className=\"full-width\"\n              required=\"required\"\n              placeholder=\"Encrypted Data\"\n\n              value={encryptThisData}\n              \n                  />\n             </div>\n                  :\n                  <div/>\n            }\n           \n            <input\n              disabled\n              type=\"text\"\n              name=\"amount\"\n              className=\"full-width\"\n              required=\"required\"\n              placeholder=\"IPFS PUSH\"\n\n              value={addCID}\n              onChange={event => {\n                setEncryptedData(event.target.value);\n              }}\n            />\n           \n            <button id=\"btn-encrypt\" onClick={encrypt}>\n              Encrypt data\n            </button>\n\n            { encryptThisData?\n            <button id=\"btn-send-txn\" onClick={addIPFS}>\n              PUSH TO IPFS\n            </button>\n            : <div></div>\n            }\n            { addCID?\n            <button id=\"btn-send-txn\" onClick={conReg}>\n              Create Profile\n            </button>:<div></div>}\n\n\n          </div>\n          :<div className=\"container gtc-2\">\n\n            <div>\n              <div class=\"card \">\n              <h3>Faucet</h3>\n              <p >Claim free tokens</p>\n              <div class=\"visual\">\n                <button>Claim</button>\n              </div>\n            </div>\n            </div>\n            <div>\n            <div>\n              <div class=\"card \">\n              <h3>PCDAO</h3>\n              <p >Participate in Governance</p>\n              <div class=\"visual\">\n                <a href=\"#\">\n                <button>Visit PCDAO</button>\n                </a>\n              </div>\n            </div>\n            </div>\n            </div>\n          </div>\n          }\n         \n        </div>\n      )}\n\n      \n        <div className=\"container footer\">\n          <div>Powered with:</div>\n          <div>Chainlink</div>\n          <div>IPFS</div>\n          <div>Magic link</div>\n          <div>Aragon</div>\n          <div>Wyre</div>\n\n        </div>\n     \n\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\nimport App from \"./App\";\n//import firebase from \"./init-firebase\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n<BrowserRouter>\n    <App />\n</BrowserRouter>, \n    rootElement\n);\n"],"sourceRoot":""}